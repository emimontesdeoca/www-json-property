@page "/"
@using System.Text

<PageTitle>www-json-property</PageTitle>

<h1 class="text-center mt-2">www-json-property</h1>

<h5 class="text-center">Just a tool to add [JsonProperty("")] to all the properties</h5>

<p class="text-center">This is just because I'm lazy enough to build so it can be automated</p>

<div class="row">
    <div class="col-6">
<textarea @bind=InitialData style="width: 100%;" rows="20"></textarea>
    </div>

    <div class="col-6">
<textarea @bind=ProcessedData style="width: 100%;" rows="20"></textarea>
    </div>
</div>

<div class="text-center mt-2">
    <button @onclick=Process class="btn btn-primary">Process</button>
</div>


@code {
    public string InitialData { get; set; }
    public string ProcessedData { get; set; }

    public void Process()
    {
        if (!string.IsNullOrEmpty(InitialData))
        {
            ProcessedData = this.GetProcessedData(this.InitialData);
        }
    }

    private string GetProcessedData(string data)
    {
        var splittedInitialData = data.Split(new string[] { "\n" }, StringSplitOptions.None);

        var sb = new StringBuilder();

        foreach (var item in splittedInitialData)
        {
            var trimmedString = item.Trim();

            if (trimmedString.Contains(" class "))
            {
                var splittedItem = trimmedString.Split(" ");
                var propertyName = splittedItem[2];
                var jsonProperty = $"[JsonProperty(\"{propertyName}\")]";

                if (!data.Contains($"[JsonProperty(\"{propertyName}\")]"))
                {
                    sb.AppendLine(jsonProperty);
                }
            }

            if (trimmedString.Contains("{ get; set; }"))
            {

                var splittedItem = trimmedString.Split(" ");
                var propertyName = splittedItem[2];
                var jsonProperty = $"[JsonProperty(\"{propertyName}\")]";

                if (!data.Contains($"[JsonProperty(\"{propertyName}\")]"))
                {
                    sb.AppendLine(jsonProperty);
                }
            }

            sb.AppendLine(item);
        }

        return sb.ToString();
    }
}